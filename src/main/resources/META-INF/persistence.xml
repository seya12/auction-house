<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="https://jakarta.ee/xml/ns/persistence"
             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd"
             version="3.0">
    <persistence-unit name="AuctionHouse">
        <!-- The provider only needs to be set if you use several JPA providers -->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <!-- TODO define mapping classes here, Not needed when hibernate.archive.autodetection is activated. -->
        <!--<class>swt6.orm.domain.Employee</class>-->

        <properties>
            <!-- Scan for annotated classes. The specification only requires
                managed providers to implement this feature. So, unmanaged providers
                may not provide it. Only works if entity names are unique. -->
            <!-- <property name="hibernate.archive.autodetection" value="class" /> -->

            <!-- JPA 3.0 standard properties -->
            <property name="jakarta.persistence.jdbc.driver"
                      value="org.apache.derby.jdbc.ClientDriver"/>
            <property name="jakarta.persistence.jdbc.url"
                      value="jdbc:derby://localhost/Auction;create=true"/>

            <property name="hibernate.dialect"
                      value="org.hibernate.dialect.DerbyDialect"/>
            <property name="hibernate.show_sql" value="false"/>
            <property name="hibernate.format_sql" value="false"/>
            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
            <property name="javax.persistence.schema-generation.create-source" value="metadata"/>
            <property name="javax.persistence.sql-load-script-source" value="META-INF/data.sql"/>
        </properties>
    </persistence-unit>
</persistence>
